services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: express-app
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev
    depends_on:
      - elasticsearch
    networks:
      - elastic
    environment:
      - NODE_ENV=development
      - ELASTICSEARCH_HOST=http://es01:9200

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.4
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=elastic-cluster
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - path.repo=/usr/share/elasticsearch/backup
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - ./shared-backup:/usr/share/elasticsearch/backup
    ports:
      - "9200:9200"
    networks:
      - elastic

  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.4
    container_name: kib01
    depends_on:
      - elasticsearch
    environment:
      - SERVER_NAME=kibana
      - ELASTICSEARCH_HOSTS=http://es01:9200
    ports:
      - "5601:5601"
    networks:
      - elastic

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.17.0
    container_name: filebeat
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./logs:/logs:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./filebeat-registry:/usr/share/filebeat/data
    networks:
      - elastic
    command: filebeat -e --strict.perms=false

volumes:
  esdata:

networks:
  elastic:
    driver: bridge
